/*
Auto-generated by: https://github.com/pmndrs/gltfjsx
Command: npx gltfjsx@6.1.4 fourAni.glb --transform
*/

import React, { useRef, useEffect } from 'react'
import { useGLTF, useAnimations } from '@react-three/drei'
import { useCharacterAnimation } from './CharacterAnimation'

export function Model(props) {
  const group = useRef()
  const { nodes, materials, animations } = useGLTF('/fourAni-transformed.glb')
  const { actions, names } = useAnimations(animations, group)

  const { setAnimations, animationIndex } = useCharacterAnimation()

  // console.log(names)

  useEffect(() => {
    setAnimations(names)
  }, [names])

  useEffect(() => {
    actions[names[animationIndex]].reset().fadeIn(0.5).play()
    return () => {
      actions[names[animationIndex]].fadeOut(0.5)
    }
  }, [animationIndex])

  return (
    <group ref={group} {...props} dispose={null} scale={2.5} position={[0.5, -2.5, 6]} >      
      <group name="Scene">
        <group name="Armature" rotation={[Math.PI / 2, 0, 0]} scale={0.01}>
          <primitive object={nodes.mixamorigHips} />
          <skinnedMesh castShadow receiveShadow name="Object_2" geometry={nodes.Object_2.geometry} material={materials['Material.010']} skeleton={nodes.Object_2.skeleton} />
          <skinnedMesh castShadow receiveShadow name="Object_3" geometry={nodes.Object_3.geometry} material={materials['Material.011']} skeleton={nodes.Object_3.skeleton} />
          <skinnedMesh castShadow receiveShadow name="Object_4" geometry={nodes.Object_4.geometry} material={materials['mat0.009']} skeleton={nodes.Object_4.skeleton} />
          <skinnedMesh castShadow receiveShadow name="Object_5" geometry={nodes.Object_5.geometry} material={materials['mat0.010']} skeleton={nodes.Object_5.skeleton} />
          <skinnedMesh castShadow receiveShadow name="Object_6" geometry={nodes.Object_6.geometry} material={materials['mat0.011']} skeleton={nodes.Object_6.skeleton} />
        </group>
      </group>
    </group>
  )
}

useGLTF.preload('/fourAni-transformed.glb')
